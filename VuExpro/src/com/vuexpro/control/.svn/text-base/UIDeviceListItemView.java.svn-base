package com.vuexpro.control;

import java.util.Collections;
import java.util.List;

import com.vuexpro.R;
import com.vuexpro.model.Core;
import com.vuexpro.model.Device;
import com.vuexpro.model.Profile;
import com.vuexpro.service.PhotoEmailTask;

import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.os.Vibrator;
import android.util.AttributeSet;
import android.view.View;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.ImageView.ScaleType;
import android.widget.LinearLayout;
import android.widget.TextView;

public class UIDeviceListItemView extends LinearLayout implements View.OnClickListener{
	private boolean _editMode = false;
	private Profile _profile;
	private DeviceListItemCallBack _parent;
	private TextView tvName;
	private TextView tvType;
	private TextView tvDescription;
	private Button btnEdit;
	private Button btnDelete;
	private Button btnView;
	private ImageButton btnUp;
	private ImageButton btnDown;
	private ImageView ivCamera;
	private UIDeviceView dvPreview;
	public interface DeviceListItemCallBack{
		public void edit(Profile profile) ;
		public void delete(Profile profile);
		public void view(Profile profile);
		public void moveUp(Profile profile);
		public void moveDown(Profile profile);
		public void photo(Profile _profile) ;
	}
	
	private void init() {
		tvName = (TextView) this.findViewById(R.id.tv_name);
		tvType = (TextView) this.findViewById(R.id.tv_type);
		tvDescription = (TextView) this.findViewById(R.id.tv_url);
		btnEdit = (Button) this.findViewById(R.id.bt_edit);
		btnDelete = (Button) this.findViewById(R.id.bt_delete);
		btnView = (Button) this.findViewById(R.id.bt_view);
		btnUp = (ImageButton) this.findViewById(R.id.ib_up);
		btnDown = (ImageButton) this.findViewById(R.id.ib_down);
		ivCamera = (ImageView) this.findViewById(R.id.ib_camera);
		dvPreview = (UIDeviceView) this.findViewById(R.id.dv_snap);
		dvPreview.setScaleType(ScaleType.CENTER_CROP);
		btnEdit.setOnClickListener(this);
		btnDelete.setOnClickListener(this);
		btnView.setOnClickListener(this);
		btnUp.setOnClickListener(this);
		btnDown.setOnClickListener(this);
		ivCamera.setOnClickListener(this);
	}

	public UIDeviceListItemView(Context context) {
		super(context);
	}
	public UIDeviceListItemView(Context context, AttributeSet attrs) {
		super(context, attrs);
	}
	public UIDeviceListItemView(Context context, AttributeSet attrs, int defStyle) {
		super(context, attrs, defStyle);
	}
	@Override
	protected void onFinishInflate(){
		super.onFinishInflate();
		init();
		updateView();
	}

	public Profile getProfile() {
		return _profile;
	}
	public void setProfile(Profile value) {
		_profile = value;
		this.updateView();
	}
	public boolean getEditMode(){
		return _editMode;
	}
	public void setEditMode(boolean value){
		_editMode = value;
		this.updateView();
	}
	public void setParent(DeviceListItemCallBack parent){
		_parent = parent;
	}
	private void updateView(){
		Device device = (_profile!=null)?_profile.getDevice():null;
		if(device==null) {
			tvName.setText("");
			tvType.setText("");
			tvDescription.setText("");
			dvPreview.setDevice(null);
			ivCamera.setVisibility(View.INVISIBLE);
			btnEdit.setVisibility(View.INVISIBLE);
			btnDelete.setVisibility(View.INVISIBLE);
			btnUp.setVisibility(View.INVISIBLE);
			btnDown.setVisibility(View.INVISIBLE);
			btnView.setVisibility(View.INVISIBLE);
		} else {
			tvName.setText(device.getName());
			tvType.setText(device.getType());
			tvDescription.setText(device.getHost());
			dvPreview.setDevice(device);
			if (_editMode) {
				btnEdit.setVisibility(View.VISIBLE);
				btnDelete.setVisibility(View.VISIBLE);
				btnUp.setVisibility(View.VISIBLE);
				btnDown.setVisibility(View.VISIBLE);
				btnView.setVisibility(View.INVISIBLE);
				ivCamera.setVisibility(View.INVISIBLE);
			} else {
				btnEdit.setVisibility(View.INVISIBLE);
				btnDelete.setVisibility(View.INVISIBLE);
				btnUp.setVisibility(View.INVISIBLE);
				btnDown.setVisibility(View.INVISIBLE);
				btnView.setVisibility(View.VISIBLE);
				ivCamera.setVisibility(View.VISIBLE);
			}
		}
	}
	@Override
	public void onClick(View v) {
		if (_profile == null) return;
		if (v == btnEdit) {
			_parent.edit(_profile);
		} else if (v == btnDelete) {
			_parent.delete(_profile);
		} else if (v == btnView) {
			_parent.view(_profile);
		} else if (v == btnUp) {
			_parent.moveUp(_profile);
		} else if (v == btnDown) {
			_parent.moveDown(_profile);
		} else if (v == ivCamera) {
			_parent.photo(_profile);
			
		}
	}
}